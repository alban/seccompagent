// Copyright 2022 The Seccomp Agent authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/kinvolk/seccompagent";

package seccompagentfalco;

service SeccompAgentFalco {
	rpc PublishEvent(PublishEventRequest) returns (PublishEventResponse) {}
}

message PublishEventRequest {
  // id is the cookie passed by the kernel in struct seccomp_notif
  uint64 id = 1;

  // pid refers to the process that made the syscall
  uint64 pid = 2;

  // syscall is the name of the syscall
  string syscall = 3;

  // KubernetesWorkload
  KubernetesWorkload k8s = 4;
}

message KubernetesWorkload {
  // Kubernetes namespace
  string namespace = 1;

  // Kubernetes pod
  string pod = 2;

  // Kubernetes container, useful if there are several containers in the pod
  string container = 3;

  // pid is the pid 1 of the container
  uint64 pid = 4;

  // pid_filter refers to the process that attached the seccomp filter. Usually
  // the pid 1 of the container, except with "docker-exec", "kubectl-exec" or
  // equivalent.
  uint64 pid_filter = 5;

}

message PublishEventResponse {
}
